# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    admin.keywords:
        class: App\Admin\KeywordsAdmin
        arguments: [~, App\Entity\Keywords, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: "Mots clés" }
    admin.thematic:
        class: App\Admin\ThematicAdmin
        arguments: [~, App\Entity\Thematic, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: "Thématiques" }
    admin.website:
        class: App\Admin\WebSiteAdmin
        arguments: [~, App\Entity\Website, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: "Sites Web" }
    admin.settings:
        class: App\Admin\SettingsAdmin
        arguments: [~, App\Entity\Settings, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: "Paramètres" }
    admin.searchengine:
        class: App\Admin\SearchEngineAdmin
        arguments: [~, App\Entity\SearchEngine, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: "Moteurs de recherche" }
    admin.rankingpage:
        class: App\Admin\RankingPagesAdmin
        arguments: [~, App\Entity\RankingPages, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: "Analyses" }
